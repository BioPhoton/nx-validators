export const MONOREPO_ESLINT_CONFIG_MOCK = {
    root: true,
    ignorePatterns: ['!**/*'],
    overrides: [
        {
            files: ['*.ts'],
            extends: [
                'eslint:recommended',
                'plugin:@typescript-eslint/recommended',
                'plugin:@angular-eslint/recommended',
                'plugin:@angular-eslint/template/process-inline-templates',
                'plugin:jest/recommended',
                'plugin:prettier/recommended',
                'plugin:import/typescript',
                'plugin:import/errors',
                'plugin:import/warnings',
            ],
            parserOptions: {
                project: ['Client/vanilla/tsconfig.lib.json', 'Client/vanilla/tsconfig.spec.json'],
                createDefaultProgram: true,
            },
            rules: {
                'prettier/prettier': 'warn',
                '@angular-eslint/component-selector': [
                    'error',
                    {
                        type: 'element',
                        prefix: ['vn', 'lh', 'pg'],
                        style: 'kebab-case',
                    },
                ],
                '@angular-eslint/directive-class-suffix': 'off',
                '@angular-eslint/directive-selector': [
                    'error',
                    {
                        type: 'attribute',
                        prefix: ['vn', 'lh', 'pg'],
                        style: 'camelCase',
                    },
                ],
                '@angular-eslint/no-attribute-decorator': 'error',
                '@angular-eslint/no-forward-ref': 'warn',
                '@angular-eslint/no-output-on-prefix': 'off',
                '@angular-eslint/no-output-native': 'off',
                '@angular-eslint/no-host-metadata-property': 'off',
                '@angular-eslint/use-pipe-transform-interface': 'off',
                '@typescript-eslint/member-delimiter-style': [
                    'error',
                    {
                        multiline: {
                            delimiter: 'semi',
                            requireLast: true,
                        },
                        singleline: {
                            delimiter: 'semi',
                            requireLast: false,
                        },
                    },
                ],
                '@typescript-eslint/no-empty-interface': 'off',
                '@typescript-eslint/member-ordering': 'off',
                '@typescript-eslint/no-unsafe-call': 'off',
                '@typescript-eslint/no-unsafe-argument': 'off',
                '@typescript-eslint/no-unsafe-assignment': 'off',
                '@typescript-eslint/no-inferrable-types': 'off',
                '@typescript-eslint/no-unsafe-member-access': 'off',
                '@typescript-eslint/no-non-null-assertion': 'off',
                '@typescript-eslint/no-explicit-any': 'off',
                '@typescript-eslint/no-floating-promises': 'off',
                '@typescript-eslint/no-unsafe-return': 'off',
                '@typescript-eslint/no-empty-function': 'off',
                '@typescript-eslint/explicit-module-boundary-types': 'off',
                '@typescript-eslint/unbound-method': 'off',
                '@typescript-eslint/restrict-template-expressions': 'off',
                '@typescript-eslint/restrict-plus-operands': 'off',
                '@typescript-eslint/ban-types': 'off',
                '@typescript-eslint/prefer-regexp-exec': 'off',
                '@typescript-eslint/no-var-requires': 'off',
                '@typescript-eslint/no-misused-promises': 'off',
                '@typescript-eslint/require-await': 'off',
                '@typescript-eslint/no-unnecessary-type-assertion': 'warn',
                '@typescript-eslint/no-unused-vars': 'error',
                '@typescript-eslint/semi': ['error'],
                'jest/no-jasmine-globals': 'off',
                'jest/expect-expect': 'off',
                'jest/valid-expect': 'off',
                'jest/valid-title': 'off',
                'jest/no-conditional-expect': 'off',
                'jest/no-export': 'off',
                'jest/no-standalone-expect': 'off',
                'jest/no-alias-methods': 'off',
                'jest/no-done-callback': 'off',
                'jest/no-test-prefixes': 'off',
                'comma-dangle': ['error', 'always-multiline'],
                'import/order': [
                    'warn',
                    {
                        'groups': ['builtin', 'external', 'index'],
                        'newlines-between': 'always',
                        'alphabetize': {
                            order: 'asc',
                            caseInsensitive: true,
                        },
                    },
                ],
                'import/no-unresolved': 'off',
                'no-fallthrough': 'off',
                'no-prototype-builtins': 'off',
                'no-case-declarations': 'off',
                'no-empty': 'off',
                'no-useless-escape': 'warn',
                'no-extra-boolean-cast': 'warn',
                'no-duplicate-imports': 'error',
                'no-invalid-regexp': 'error',
                'no-multiple-empty-lines': 'error',
                'no-redeclare': 'error',
                'prefer-spread': 'off',
                'prefer-const': 'warn',
                'no-console': 'error',
            },
            settings: {
                jest: {
                    version: 24,
                },
            },
        },
        {
            files: ['*.html'],
            excludedFiles: ['*inline-template-*.component.html'],
            extends: ['plugin:@angular-eslint/template/recommended', 'plugin:prettier/recommended'],
            rules: {
                '@angular-eslint/template/use-track-by-function': 'error',
            },
        },
        {
            files: '*.json',
            parser: 'jsonc-eslint-parser',
            rules: {},
        },
    ],
};
export const VANILLA_ESLINT_CONFIG_MOCK_DIFF_EXTENDS = {
    root: true,
    ignorePatterns: ['!**/*'],
    overrides: [
        {
            files: ['*.ts'],
            extends: [
                'eslint:recommended',
                'plugin:@typescript-eslint/recommended',
                'plugin:@angular-eslint/recommended',
                'plugin:@angular-eslint/template/process-inline-templates',
                'plugin:import/typescript',
                'plugin:import/errors',
                'plugin:import/warnings',
            ],
            parserOptions: {
                project: ['Client/vanilla/tsconfig.lib.json', 'Client/vanilla/tsconfig.spec.json'],
                createDefaultProgram: true,
            },
            rules: {
                'prettier/prettier': 'warn',
                '@angular-eslint/component-selector': [
                    'error',
                    {
                        type: 'element',
                        prefix: ['vn', 'lh', 'pg'],
                        style: 'kebab-case',
                    },
                ],
                '@angular-eslint/directive-class-suffix': 'off',
                '@angular-eslint/directive-selector': [
                    'error',
                    {
                        type: 'attribute',
                        prefix: ['vn', 'lh', 'pg'],
                        style: 'camelCase',
                    },
                ],
                '@angular-eslint/no-attribute-decorator': 'error',
                '@angular-eslint/no-forward-ref': 'warn',
                '@angular-eslint/no-output-on-prefix': 'off',
                '@angular-eslint/no-output-native': 'off',
                '@angular-eslint/no-host-metadata-property': 'off',
                '@angular-eslint/use-pipe-transform-interface': 'off',
                '@typescript-eslint/member-delimiter-style': [
                    'error',
                    {
                        multiline: {
                            delimiter: 'semi',
                            requireLast: true,
                        },
                        singleline: {
                            delimiter: 'semi',
                            requireLast: false,
                        },
                    },
                ],
                '@typescript-eslint/no-empty-interface': 'off',
                '@typescript-eslint/member-ordering': 'off',
                '@typescript-eslint/no-unsafe-call': 'off',
                '@typescript-eslint/no-unsafe-argument': 'off',
                '@typescript-eslint/no-unsafe-assignment': 'off',
                '@typescript-eslint/no-inferrable-types': 'off',
                '@typescript-eslint/no-unsafe-member-access': 'off',
                '@typescript-eslint/no-non-null-assertion': 'off',
                '@typescript-eslint/no-explicit-any': 'off',
                '@typescript-eslint/no-floating-promises': 'off',
                '@typescript-eslint/no-unsafe-return': 'off',
                '@typescript-eslint/no-empty-function': 'off',
                '@typescript-eslint/explicit-module-boundary-types': 'off',
                '@typescript-eslint/unbound-method': 'off',
                '@typescript-eslint/restrict-template-expressions': 'off',
                '@typescript-eslint/restrict-plus-operands': 'off',
                '@typescript-eslint/ban-types': 'off',
                '@typescript-eslint/prefer-regexp-exec': 'off',
                '@typescript-eslint/no-var-requires': 'off',
                '@typescript-eslint/no-misused-promises': 'off',
                '@typescript-eslint/require-await': 'off',
                '@typescript-eslint/no-unnecessary-type-assertion': 'warn',
                '@typescript-eslint/no-unused-vars': 'error',
                '@typescript-eslint/semi': ['error'],
                'jest/no-jasmine-globals': 'off',
                'jest/expect-expect': 'off',
                'jest/valid-expect': 'off',
                'jest/valid-title': 'off',
                'jest/no-conditional-expect': 'off',
                'jest/no-export': 'off',
                'jest/no-standalone-expect': 'off',
                'jest/no-alias-methods': 'off',
                'jest/no-done-callback': 'off',
                'jest/no-test-prefixes': 'off',
                'comma-dangle': ['error', 'always-multiline'],
                'import/order': [
                    'warn',
                    {
                        'groups': ['builtin', 'external', 'index'],
                        'newlines-between': 'always',
                        'alphabetize': {
                            order: 'asc',
                            caseInsensitive: true,
                        },
                    },
                ],
                'import/no-unresolved': 'off',
                'no-fallthrough': 'off',
                'no-prototype-builtins': 'off',
                'no-case-declarations': 'off',
                'no-empty': 'off',
                'no-useless-escape': 'warn',
                'no-extra-boolean-cast': 'warn',
                'no-duplicate-imports': 'error',
                'no-invalid-regexp': 'error',
                'no-multiple-empty-lines': 'error',
                'no-redeclare': 'error',
                'prefer-spread': 'off',
                'prefer-const': 'warn',
                'no-console': 'error',
            },
            settings: {
                jest: {
                    version: 24,
                },
            },
        },
        {
            files: ['*.html'],
            excludedFiles: ['*inline-template-*.component.html'],
            extends: ['plugin:@angular-eslint/template/recommended', 'plugin:prettier/recommended'],
            rules: {
                '@angular-eslint/template/use-track-by-function': 'error',
            },
        },
        {
            files: '*.json',
            parser: 'jsonc-eslint-parser',
            rules: {},
        },
    ],
};
export const VANILLA_ESLINT_CONFIG_MOCK_DIFF_RULES = {
    root: true,
    ignorePatterns: ['!**/*'],
    overrides: [
        {
            files: ['*.ts'],
            extends: [
                'eslint:recommended',
                'plugin:@typescript-eslint/recommended',
                'plugin:@angular-eslint/recommended',
                'plugin:@angular-eslint/template/process-inline-templates',
                'plugin:jest/recommended',
                'plugin:prettier/recommended',
                'plugin:import/typescript',
                'plugin:import/errors',
                'plugin:import/warnings',
            ],
            parserOptions: {
                project: ['Client/vanilla/tsconfig.lib.json', 'Client/vanilla/tsconfig.spec.json'],
                createDefaultProgram: true,
            },
            rules: {
                'prettier/prettier': 'warn',
                '@angular-eslint/component-selector': [
                    'error',
                    {
                        type: 'element',
                        prefix: ['vn', 'lh', 'pg'],
                        style: 'kebab-case',
                    },
                ],
                '@angular-eslint/directive-class-suffix': 'off',
                '@angular-eslint/directive-selector': [
                    'error',
                    {
                        type: 'attribute',
                        prefix: ['vn', 'lh', 'pg'],
                        style: 'camelCase',
                    },
                ],
                '@angular-eslint/no-attribute-decorator': 'error',
                '@angular-eslint/no-forward-ref': 'warn',
                '@angular-eslint/no-output-on-prefix': 'off',
                '@angular-eslint/no-output-native': 'off',
                '@angular-eslint/no-host-metadata-property': 'off',
                '@angular-eslint/use-pipe-transform-interface': 'off',
                '@typescript-eslint/member-delimiter-style': [
                    'error',
                    {
                        multiline: {
                            delimiter: 'semi',
                            requireLast: true,
                        },
                        singleline: {
                            delimiter: 'semi',
                            requireLast: false,
                        },
                    },
                ],
                '@typescript-eslint/no-empty-interface': 'off',
                '@typescript-eslint/member-ordering': 'off',
                '@typescript-eslint/no-unsafe-call': 'off',
                '@typescript-eslint/no-unsafe-argument': 'off',
                '@typescript-eslint/no-unsafe-assignment': 'off',
                '@typescript-eslint/no-inferrable-types': 'off',
                '@typescript-eslint/no-unsafe-member-access': 'off',
                '@typescript-eslint/no-non-null-assertion': 'off',
                '@typescript-eslint/no-explicit-any': 'off',
                '@typescript-eslint/no-floating-promises': 'off',
                '@typescript-eslint/no-unsafe-return': 'off',
                '@typescript-eslint/no-empty-function': 'off',
                '@typescript-eslint/explicit-module-boundary-types': 'off',
                '@typescript-eslint/unbound-method': 'off',
                '@typescript-eslint/restrict-template-expressions': 'off',
                '@typescript-eslint/restrict-plus-operands': 'off',
                '@typescript-eslint/ban-types': 'off',
                '@typescript-eslint/prefer-regexp-exec': 'off',
                '@typescript-eslint/no-var-requires': 'off',
                '@typescript-eslint/no-misused-promises': 'off',
                '@typescript-eslint/require-await': 'off',
                '@typescript-eslint/no-unnecessary-type-assertion': 'warn',
                '@typescript-eslint/no-unused-vars': 'error',
                '@typescript-eslint/semi': ['error'],
                'jest/no-jasmine-globals': 'off',
                'jest/expect-expect': 'off',
                'jest/valid-expect': 'off',
                'jest/valid-title': 'off',
                'jest/no-conditional-expect': 'off',
                'jest/no-export': 'off',
                'jest/no-standalone-expect': 'off',
                'jest/no-alias-methods': 'off',
                'jest/no-done-callback': 'off',
                'jest/no-test-prefixes': 'off',
                'comma-dangle': ['error', 'always-multiline'],
                'no-fallthrough': 'off',
                'no-prototype-builtins': 'off',
                'no-case-declarations': 'off',
                'no-empty': 'off',
                'no-useless-escape': 'warn',
                'no-extra-boolean-cast': 'warn',
                'no-duplicate-imports': 'error',
                'no-invalid-regexp': 'error',
                'no-multiple-empty-lines': 'error',
                'no-redeclare': 'error',
                'prefer-spread': 'off',
                'prefer-const': 'warn',
                'no-console': 'error',
            },
            settings: {
                jest: {
                    version: 24,
                },
            },
        },
        {
            files: ['*.html'],
            excludedFiles: ['*inline-template-*.component.html'],
            extends: ['plugin:@angular-eslint/template/recommended', 'plugin:prettier/recommended'],
            rules: {
                '@angular-eslint/template/use-track-by-function': 'error',
            },
        },
        {
            files: '*.json',
            parser: 'jsonc-eslint-parser',
            rules: {},
        },
    ],
};
